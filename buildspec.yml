version: 0.2

phases:
  pre_build:
    commands:
      - echo "Logging into Amazon ECR..."
      - aws --version
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 047719652562.dkr.ecr.us-east-1.amazonaws.com
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - echo "Image Tag: $IMAGE_TAG"
      - REPO_URI=047719652562.dkr.ecr.us-east-1.amazonaws.com/capstone_ecr

      - echo "Installing SonarQube Scanner..."
      - curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
      - unzip -q sonar-scanner.zip
      - export PATH=$PATH:$(pwd)/sonar-scanner-4.8.0.2856-linux/bin

  build:
    commands:
      - echo "Running SonarQube Analysis..."
      - sonar-scanner -Dsonar.projectKey=New_Capstone -Dsonar.sources=. -Dsonar.java.binaries=target/classes -Dsonar.host.url=http://52.87.101.241:9000 -Dsonar.login=sqp_39d1f3d9519e997ef336a9887f58a289df734506

      - echo "Building Docker image..."
      - mvn clean package -DskipTests
      - docker build -t ${REPO_URI}:${IMAGE_TAG} .
      - docker tag ${REPO_URI}:${IMAGE_TAG} ${REPO_URI}:latest

  post_build:
    commands:
      - echo "Build completed, pushing images..."
      - docker push ${REPO_URI}:${IMAGE_TAG}
      - docker push ${REPO_URI}:latest

      - echo "Deploying to Kubernetes..."
      - aws eks update-kubeconfig --region us-east-1 --name Capstone-cluster
      - sed -i "s|image: .*|image: ${REPO_URI}:${IMAGE_TAG}|" kubernetes/bankapp-deployment.yaml
      - kubectl apply -f kubernetes/bankapp-namespace.yaml
      - kubectl apply -f kubernetes/bankapp-deployment.yaml
      - kubectl apply -f kubernetes/bankapp-service.yaml

artifacts:
  files:
    - kubernetes/*
