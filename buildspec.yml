version: 0.2

phases:
  install:
    runtime-versions:
      java: corretto17
    commands:
      - echo Installing Docker...
      - nohup /usr/local/bin/dockerd-entrypoint.sh &>/tmp/dockerd.log &
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
      - echo Docker is ready.

      - echo Installing kubectl...
      - curl -LO "https://dl.k8s.io/release/v1.29.1/bin/linux/amd64/kubectl"
      - chmod +x kubectl
      - mv kubectl /usr/local/bin/
      - kubectl version --client

      - echo Installing SonarScanner...
      - curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
      - unzip -q sonar-scanner.zip
      - export PATH=$PATH:$(pwd)/sonar-scanner-4.8.0.2856-linux/bin
      - echo "export PATH=$PATH:$(pwd)/sonar-scanner-4.8.0.2856-linux/bin" >> ~/.bashrc

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 047719652562.dkr.ecr.us-east-1.amazonaws.com

      - echo Setting image tag and repo URI...
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - echo Image Tag: $IMAGE_TAG
      - REPO_URI=047719652562.dkr.ecr.us-east-1.amazonaws.com/capstone_ecr

      - echo Fetching container name from SSM...
      - CONTAINER_NAME=$(aws ssm get-parameter --name "/python-app/eks-python-deploy/container-name" --with-decryption --query "Parameter.Value" --output text)
      - echo Fetched container name: $CONTAINER_NAME

      - echo Running SonarQube analysis...
      - >
        sonar-scanner
        -Dsonar.projectKey=Capstone_Project
        -Dsonar.sources=.
        -Dsonar.host.url=http://52.87.101.241
        -Dsonar.login=sqp_b25db21244d06591db52eb84baa795ebac8beb80

      - echo Compiling application...
      - mvn clean package -DskipTests

  build:
    commands:
      - echo Building Docker image...
      - docker build -t ${REPO_URI}:${IMAGE_TAG} .
      - docker tag ${REPO_URI}:${IMAGE_TAG} ${REPO_URI}:latest

  post_build:
    commands:
      - echo Pushing Docker image to Amazon ECR...
      - docker push ${REPO_URI}:${IMAGE_TAG}
      - docker push ${REPO_URI}:latest

      - echo Updating Kubernetes deployment...
      - sed -i "s|image: .*|image: ${REPO_URI}:${IMAGE_TAG}|" kubernetes/bankapp-deployment.yml

      - echo Configuring kubeconfig...
      - aws eks update-kubeconfig --region us-east-1 --name Capstone-cluster

      - echo Applying Kubernetes manifests...
      - kubectl apply -f kubernetes/

artifacts:
  files:
    - kubernetes/*
